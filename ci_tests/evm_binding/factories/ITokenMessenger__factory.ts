/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ITokenMessenger,
  ITokenMessengerInterface,
} from "../ITokenMessenger";

const _abi = [
  {
    type: "function",
    name: "depositForBurnWithCaller",
    inputs: [
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "destinationDomain",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "mintRecipient",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "burnToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "destinationCaller",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "nonce",
        type: "uint64",
        internalType: "uint64",
      },
    ],
    stateMutability: "nonpayable",
  },
] as const;

export class ITokenMessenger__factory {
  static readonly abi = _abi;
  static createInterface(): ITokenMessengerInterface {
    return new Interface(_abi) as ITokenMessengerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ITokenMessenger {
    return new Contract(address, _abi, runner) as unknown as ITokenMessenger;
  }
}
