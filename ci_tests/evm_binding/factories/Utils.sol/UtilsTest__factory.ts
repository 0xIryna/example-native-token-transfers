/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { UtilsTest, UtilsTestInterface } from "../../Utils.sol/UtilsTest";

const _abi = [
  {
    type: "function",
    name: "IS_TEST",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeArtifacts",
    inputs: [],
    outputs: [
      {
        name: "excludedArtifacts_",
        type: "string[]",
        internalType: "string[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeContracts",
    inputs: [],
    outputs: [
      {
        name: "excludedContracts_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeSenders",
    inputs: [],
    outputs: [
      {
        name: "excludedSenders_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "failed",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "targetArtifactSelectors",
    inputs: [],
    outputs: [
      {
        name: "targetedArtifactSelectors_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzSelector[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "selectors",
            type: "bytes4[]",
            internalType: "bytes4[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetArtifacts",
    inputs: [],
    outputs: [
      {
        name: "targetedArtifacts_",
        type: "string[]",
        internalType: "string[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetContracts",
    inputs: [],
    outputs: [
      {
        name: "targetedContracts_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetInterfaces",
    inputs: [],
    outputs: [
      {
        name: "targetedInterfaces_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzInterface[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "artifacts",
            type: "string[]",
            internalType: "string[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetSelectors",
    inputs: [],
    outputs: [
      {
        name: "targetedSelectors_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzSelector[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "selectors",
            type: "bytes4[]",
            internalType: "bytes4[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetSenders",
    inputs: [],
    outputs: [
      {
        name: "targetedSenders_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "test_doesntDisableInitializer",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "test_safeConstructor",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "test_writesToStorage",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "log",
    inputs: [
      {
        name: "",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_address",
    inputs: [
      {
        name: "",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "uint256[]",
        indexed: false,
        internalType: "uint256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "int256[]",
        indexed: false,
        internalType: "int256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "address[]",
        indexed: false,
        internalType: "address[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_bytes",
    inputs: [
      {
        name: "",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_bytes32",
    inputs: [
      {
        name: "",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_int",
    inputs: [
      {
        name: "",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_address",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256[]",
        indexed: false,
        internalType: "uint256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256[]",
        indexed: false,
        internalType: "int256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "address[]",
        indexed: false,
        internalType: "address[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_bytes",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_bytes32",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_decimal_int",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
      {
        name: "decimals",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_decimal_uint",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "decimals",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_int",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_string",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_uint",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_string",
    inputs: [
      {
        name: "",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_uint",
    inputs: [
      {
        name: "",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "logs",
    inputs: [
      {
        name: "",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x608060405260078054600160ff199182168117909255600b8054909116909117905534801561002d57600080fd5b506117e18061003d6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063916a17c61161008c578063ba414fa611610066578063ba414fa61461017e578063d02419a214610196578063e20c9f711461019e578063fa7626d4146101a657600080fd5b8063916a17c614610166578063952600411461016e578063b5508aa91461017657600080fd5b80633f7286f4116100c85780633f7286f41461012a57806366d9a9a0146101325780636fe82e0d1461014757806385226c811461015157600080fd5b80631ed7831c146100ef5780632ade38801461010d5780633e5e3c2314610122575b600080fd5b6100f76101b3565b6040516101049190610c71565b60405180910390f35b610115610215565b6040516101049190610d0e565b6100f7610357565b6100f76103b7565b61013a610417565b6040516101049190610dce565b61014f6104fd565b005b61015961066c565b6040516101049190610e81565b61013a61073c565b61014f610822565b61015961097f565b610186610a4f565b6040519015158152602001610104565b61014f610b7c565b6100f7610bec565b6007546101869060ff1681565b6060601480548060200260200160405190810160405280929190818152602001828054801561020b57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101ed575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b8282101561034e57600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b828210156103375783829060005260206000200180546102aa90610ee3565b80601f01602080910402602001604051908101604052809291908181526020018280546102d690610ee3565b80156103235780601f106102f857610100808354040283529160200191610323565b820191906000526020600020905b81548152906001019060200180831161030657829003601f168201915b50505050508152602001906001019061028b565b505050508152505081526020019060010190610239565b50505050905090565b6060601680548060200260200160405190810160405280929190818152602001828054801561020b576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116101ed575050505050905090565b6060601580548060200260200160405190810160405280929190818152602001828054801561020b576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116101ed575050505050905090565b60606019805480602002602001604051908101604052809291908181526020016000905b8282101561034e5760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156104e557602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116104a75790505b5050505050815250508152602001906001019061043b565b60008051602061178c83398151915260001c6001600160a01b031663cf22e3c96040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561054957600080fd5b505af115801561055d573d6000803e3d6000fd5b5050505060405161056d90610c4c565b604051809103906000f080158015610589573d6000803e3d6000fd5b505073__$0a1b9fe49646f06f1155c89b6309993d7a$__63638a144060008051602061178c83398151915260001c6001600160a01b031663aa5cf90e6040518163ffffffff1660e01b81526004016000604051808303816000875af11580156105f6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261061e9190810190611192565b6040518263ffffffff1660e01b815260040161063a91906113ed565b60006040518083038186803b15801561065257600080fd5b505af4158015610666573d6000803e3d6000fd5b50505050565b60606018805480602002602001604051908101604052809291908181526020016000905b8282101561034e5783829060005260206000200180546106af90610ee3565b80601f01602080910402602001604051908101604052809291908181526020018280546106db90610ee3565b80156107285780601f106106fd57610100808354040283529160200191610728565b820191906000526020600020905b81548152906001019060200180831161070b57829003601f168201915b505050505081526020019060010190610690565b6060601a805480602002602001604051908101604052809291908181526020016000905b8282101561034e5760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561080a57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116107cc5790505b50505050508152505081526020019060010190610760565b60008051602061178c83398151915260001c6001600160a01b031663cf22e3c96040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561086e57600080fd5b505af1158015610882573d6000803e3d6000fd5b5050505060405161089290610c59565b604051809103906000f0801580156108ae573d6000803e3d6000fd5b505060008051602061178c83398151915260001c6001600160a01b031663f48448146040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156108fc57600080fd5b505af1158015610910573d6000803e3d6000fd5b5050505073__$0a1b9fe49646f06f1155c89b6309993d7a$__63638a144060008051602061178c83398151915260001c6001600160a01b031663aa5cf90e6040518163ffffffff1660e01b81526004016000604051808303816000875af11580156105f6573d6000803e3d6000fd5b60606017805480602002602001604051908101604052809291908181526020016000905b8282101561034e5783829060005260206000200180546109c290610ee3565b80601f01602080910402602001604051908101604052809291908181526020018280546109ee90610ee3565b8015610a3b5780601f10610a1057610100808354040283529160200191610a3b565b820191906000526020600020905b815481529060010190602001808311610a1e57829003601f168201915b5050505050815260200190600101906109a3565b600754600090610100900460ff1615610a715750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610b775760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610aff917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611548565b60408051601f1981840301815290829052610b1991611579565b6000604051808303816000865af19150503d8060008114610b56576040519150601f19603f3d011682016040523d82523d6000602084013e610b5b565b606091505b5091505080806020019051810190610b739190611595565b9150505b919050565b60008051602061178c83398151915260001c6001600160a01b031663cf22e3c96040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610bc857600080fd5b505af1158015610bdc573d6000803e3d6000fd5b5050505060405161089290610c65565b6060601380548060200260200160405190810160405280929190818152602001828054801561020b576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116101ed575050505050905090565b610117806115b883390190565b605c806116cf83390190565b60618061172b83390190565b6020808252825182820181905260009190848201906040850190845b81811015610cb25783516001600160a01b031683529284019291840191600101610c8d565b50909695505050505050565b60005b83811015610cd9578181015183820152602001610cc1565b50506000910152565b60008151808452610cfa816020860160208601610cbe565b601f01601f19169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b85811015610dbe57603f198b8503018752825180516001600160a01b031685528901518985018990528051898601819052908a0190606081881b870181019190870190855b81811015610da857605f19898503018352610d96848651610ce2565b948e01949350918d0191600101610d7a565b505050978a019794505091880191600101610d35565b50919a9950505050505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015610e7257898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015610e5d5783516001600160e01b0319168252928b019260019290920191908b0190610e33565b50978a01979550505091870191600101610df6565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610ed657603f19888603018452610ec4858351610ce2565b94509285019290850190600101610ea8565b5092979650505050505050565b600181811c90821680610ef757607f821691505b602082108103610f1757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715610f5657610f56610f1d565b60405290565b604051610180810167ffffffffffffffff81118282101715610f5657610f56610f1d565b604051601f8201601f1916810167ffffffffffffffff81118282101715610fa957610fa9610f1d565b604052919050565b600067ffffffffffffffff821115610fcb57610fcb610f1d565b5060051b60200190565b600060408284031215610fe757600080fd5b6040516040810181811067ffffffffffffffff8211171561100a5761100a610f1d565b604052825181526020928301519281019290925250919050565b8051600b8110610b7757600080fd5b80516001600160a01b0381168114610b7757600080fd5b80518015158114610b7757600080fd5b600082601f83011261106b57600080fd5b815167ffffffffffffffff81111561108557611085610f1d565b611098601f8201601f1916602001610f80565b8181528460208386010111156110ad57600080fd5b6110be826020830160208701610cbe565b949350505050565b600082601f8301126110d757600080fd5b815160206110ec6110e783610fb1565b610f80565b82815260c0928302850182019282820191908785111561110b57600080fd5b8387015b858110156111855781818a0312156111275760008081fd5b61112f610f33565b61113882611033565b81528582015186820152604061114f81840161104a565b90820152606082810151908201526080808301519082015260a061117481840161104a565b90820152845292840192810161110f565b5090979650505050505050565b600060208083850312156111a557600080fd5b825167ffffffffffffffff808211156111bd57600080fd5b818501915085601f8301126111d157600080fd5b81516111df6110e782610fb1565b81815260059190911b830184019084810190888311156111fe57600080fd5b8585015b838110156113425780518581111561121957600080fd5b86016101a0818c03601f1901121561123057600080fd5b611238610f5c565b6112448c8a8401610fd5565b815261125260608301611024565b8982015261126260808301611033565b604082015261127360a08301611033565b606082015261128460c0830161104a565b608082015260e082015160a082015261010082015160c0820152610120820151878111156112b157600080fd5b6112bf8d8b8386010161105a565b60e0830152506101408083015161010083015261016080840151898111156112e657600080fd5b6112f48f8d8388010161105a565b61012085015250611308610180850161104a565b828401526101a084015191508882111561132157600080fd5b61132f8e8c848701016110c6565b9083015250845250918601918601611202565b5098975050505050505050565b600b811061136d57634e487b7160e01b600052602160045260246000fd5b9052565b600081518084526020808501945080840160005b838110156113e257815180516001600160a01b031688528381015184890152604080820151151590890152606080820151908901526080808201519089015260a09081015115159088015260c09096019590820190600101611385565b509495945050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561153a57888303603f190185528151805180518552602090810151908501526101a08882015161144a8987018261134f565b50878201516060611465818801836001600160a01b03169052565b83015190506080611480878201836001600160a01b03169052565b830151905060a06114948782018315159052565b83015160c08781019190915283015160e0808801919091528301516101008088018490529091506114c783880183610ce2565b925080840151915050610120818188015280840151915050610140868303818801526114f38383610ce2565b92508084015191505061016061150c8188018315159052565b929092015185820361018087015291506115268183611371565b968901969450505090860190600101611414565b509098975050505050505050565b6001600160e01b031983168152815160009061156b816004850160208701610cbe565b919091016004019392505050565b6000825161158b818460208701610cbe565b9190910192915050565b6000602082840312156115a757600080fd5b6115b08261104a565b939250505056fe6080604052348015600f57600080fd5b506016601a565b60ca565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff161560695760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b039081161460c75780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b603f806100d86000396000f3fe6080604052600080fdfea2646970667358221220c04d2ae40f1e46caa516c48538ce29fbafe2ebf8a20b402f0381b0e88dfd23f364736f6c634300081300336080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122074e7ca3853e64a90520c02f0bfd96af952304e62ddc86ef9ffcfc31b17d14c4264736f6c634300081300336080604052348015600f57600080fd5b50600a600055603f8060226000396000f3fe6080604052600080fdfea26469706673582212204aa2a0239b7ae1ca688f9d180315916fa258f0b43381465452f22c5e8262bd8e64736f6c63430008130033885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da26469706673582212202c65982f20576f2f39f71f175e0cd5730f699afa1d1ad294672bb9f97710b2ff64736f6c63430008130033";

type UtilsTestConstructorParams =
  | [linkLibraryAddresses: UtilsTestLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UtilsTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class UtilsTest__factory extends ContractFactory {
  constructor(...args: UtilsTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        UtilsTest__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(linkLibraryAddresses: UtilsTestLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$0a1b9fe49646f06f1155c89b6309993d7a\\$__", "g"),
      linkLibraryAddresses["test/libraries/Utils.sol:Utils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<UtilsTest> {
    return super.deploy(overrides || {}) as Promise<UtilsTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): UtilsTest {
    return super.attach(address) as UtilsTest;
  }
  override connect(signer: Signer): UtilsTest__factory {
    return super.connect(signer) as UtilsTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UtilsTestInterface {
    return new utils.Interface(_abi) as UtilsTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UtilsTest {
    return new Contract(address, _abi, signerOrProvider) as UtilsTest;
  }
}

export interface UtilsTestLibraryAddresses {
  ["test/libraries/Utils.sol:Utils"]: string;
}
