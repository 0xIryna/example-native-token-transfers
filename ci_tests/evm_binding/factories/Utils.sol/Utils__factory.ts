/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Utils, UtilsInterface } from "../../Utils.sol/Utils";

const _abi = [
  {
    type: "function",
    name: "assertSafeUpgradeableConstructor",
    inputs: [
      {
        name: "accesses",
        type: "tuple[]",
        internalType: "struct VmSafe.AccountAccess[]",
        components: [
          {
            name: "chainInfo",
            type: "tuple",
            internalType: "struct VmSafe.ChainInfo",
            components: [
              {
                name: "forkId",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "chainId",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "kind",
            type: "VmSafe.AccountAccessKind",
            internalType: "enum VmSafe.AccountAccessKind",
          },
          {
            name: "account",
            type: "address",
            internalType: "address",
          },
          {
            name: "accessor",
            type: "address",
            internalType: "address",
          },
          {
            name: "initialized",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "oldBalance",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "newBalance",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "deployedCode",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "value",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "data",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "reverted",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "storageAccesses",
            type: "tuple[]",
            internalType: "struct VmSafe.StorageAccess[]",
            components: [
              {
                name: "account",
                type: "address",
                internalType: "address",
              },
              {
                name: "slot",
                type: "bytes32",
                internalType: "bytes32",
              },
              {
                name: "isWrite",
                type: "bool",
                internalType: "bool",
              },
              {
                name: "previousValue",
                type: "bytes32",
                internalType: "bytes32",
              },
              {
                name: "newValue",
                type: "bytes32",
                internalType: "bytes32",
              },
              {
                name: "reverted",
                type: "bool",
                internalType: "bool",
              },
            ],
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "fetchQueuedTransferDigestsFromLogs",
    inputs: [
      {
        name: "logs",
        type: "tuple[]",
        internalType: "struct VmSafe.Log[]",
        components: [
          {
            name: "topics",
            type: "bytes32[]",
            internalType: "bytes32[]",
          },
          {
            name: "data",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "emitter",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32[]",
        internalType: "bytes32[]",
      },
    ],
    stateMutability: "pure",
  },
] as const;

const _bytecode =
  "0x610ac361003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c8063638a1440146100455780637dec0d651461005a575b600080fd5b6100586100533660046106a7565b610083565b005b61006d610068366004610864565b610258565b60405161007a91906109c4565b60405180910390f35b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a006000805b83518110156101d45760008482815181106100c5576100c5610a08565b6020026020010151905060005b816101600151518110156101bf5781610160015181815181106100f7576100f7610a08565b602002602001015160400151156101ad5784826101600151828151811061012057610120610a08565b6020026020010151602001510361013a57600193506101ad565b60405162461bcd60e51b815260206004820152603960248201527f7570677261646561626c6520696d706c656d656e746174696f6e20636f6e737460448201527f727563746f722077726f74652073746f7261676520736c6f740000000000000060648201526084015b60405180910390fd5b806101b781610a34565b9150506100d2565b505080806101cc90610a34565b9150506100a8565b50806102535760405162461bcd60e51b815260206004820152604260248201527f7570677261646561626c6520696d706c656d656e746174696f6e20636f6e737460448201527f727563746f72206469646e27742064697361626c6520696e697469616c697a65606482015261727360f01b608482015260a4016101a4565b505050565b60606000805b83518110156102e5577f7f63c9251d82a933210c2b6d0b0f116252c3c116788120e64e8e8215df6f316284828151811061029a5761029a610a08565b6020026020010151600001516000815181106102b8576102b8610a08565b6020026020010151036102d3576102d0600183610a4d565b91505b806102dd81610a34565b91505061025e565b5060008167ffffffffffffffff81111561030157610301610406565b60405190808252806020026020018201604052801561032a578160200160208202803683370190505b5090506000805b85518110156103fc577f7f63c9251d82a933210c2b6d0b0f116252c3c116788120e64e8e8215df6f316286828151811061036d5761036d610a08565b60200260200101516000015160008151811061038b5761038b610a08565b6020026020010151036103ea578581815181106103aa576103aa610a08565b6020026020010151602001516103bf90610a66565b8383815181106103d1576103d1610a08565b60209081029190910101526103e7600183610a4d565b91505b806103f481610a34565b915050610331565b5090949350505050565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171561043f5761043f610406565b60405290565b604051610180810167ffffffffffffffff8111828210171561043f5761043f610406565b6040516060810167ffffffffffffffff8111828210171561043f5761043f610406565b604051601f8201601f1916810167ffffffffffffffff811182821017156104b5576104b5610406565b604052919050565b600067ffffffffffffffff8211156104d7576104d7610406565b5060051b60200190565b6000604082840312156104f357600080fd5b6040516040810181811067ffffffffffffffff8211171561051657610516610406565b604052823581526020928301359281019290925250919050565b8035600b811061053f57600080fd5b919050565b80356001600160a01b038116811461053f57600080fd5b8035801515811461053f57600080fd5b600082601f83011261057c57600080fd5b813567ffffffffffffffff81111561059657610596610406565b6105a9601f8201601f191660200161048c565b8181528460208386010111156105be57600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f8301126105ec57600080fd5b813560206106016105fc836104bd565b61048c565b82815260c0928302850182019282820191908785111561062057600080fd5b8387015b8581101561069a5781818a03121561063c5760008081fd5b61064461041c565b61064d82610544565b81528582013586820152604061066481840161055b565b90820152606082810135908201526080808301359082015260a061068981840161055b565b908201528452928401928101610624565b5090979650505050505050565b600060208083850312156106ba57600080fd5b823567ffffffffffffffff808211156106d257600080fd5b818501915085601f8301126106e657600080fd5b81356106f46105fc826104bd565b81815260059190911b8301840190848101908883111561071357600080fd5b8585015b838110156108575780358581111561072e57600080fd5b86016101a0818c03601f1901121561074557600080fd5b61074d610445565b6107598c8a84016104e1565b815261076760608301610530565b8982015261077760808301610544565b604082015261078860a08301610544565b606082015261079960c0830161055b565b608082015260e082013560a082015261010082013560c0820152610120820135878111156107c657600080fd5b6107d48d8b8386010161056b565b60e0830152506101408083013561010083015261016080840135898111156107fb57600080fd5b6108098f8d8388010161056b565b6101208501525061081d610180850161055b565b828401526101a084013591508882111561083657600080fd5b6108448e8c848701016105db565b9083015250845250918601918601610717565b5098975050505050505050565b6000602080838503121561087757600080fd5b823567ffffffffffffffff8082111561088f57600080fd5b818501915085601f8301126108a357600080fd5b81356108b16105fc826104bd565b81815260059190911b830184019084810190888311156108d057600080fd5b8585015b83811015610857578035858111156108eb57600080fd5b86016060818c03601f1901121561090157600080fd5b610909610469565b888201358781111561091a57600080fd5b8201603f81018d1361092b57600080fd5b8981013561093b6105fc826104bd565b81815260059190911b8201604001908b8101908f83111561095b57600080fd5b6040840193505b8284101561097b5783358252928c0192908c0190610962565b845250505060408201358781111561099257600080fd5b6109a08d8b8386010161056b565b8a830152506109b160608301610544565b60408201528452509186019186016108d4565b6020808252825182820181905260009190848201906040850190845b818110156109fc578351835292840192918401916001016109e0565b50909695505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610a4657610a46610a1e565b5060010190565b80820180821115610a6057610a60610a1e565b92915050565b80516020808301519190811015610a87576000198160200360031b1b821691505b5091905056fea2646970667358221220bba8720b65ddde18c1731bc10c6002652e8c92236ca0394bebbc2a024cfc330464736f6c63430008130033";

type UtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Utils__factory extends ContractFactory {
  constructor(...args: UtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: string }): Promise<Utils> {
    return super.deploy(overrides || {}) as Promise<Utils>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Utils {
    return super.attach(address) as Utils;
  }
  override connect(signer: Signer): Utils__factory {
    return super.connect(signer) as Utils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UtilsInterface {
    return new utils.Interface(_abi) as UtilsInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Utils {
    return new Contract(address, _abi, signerOrProvider) as Utils;
  }
}
