/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ImplementationTest,
  ImplementationTestInterface,
} from "../../Implementation.t.sol/ImplementationTest";

const _abi = [
  {
    type: "function",
    name: "IS_TEST",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeArtifacts",
    inputs: [],
    outputs: [
      {
        name: "excludedArtifacts_",
        type: "string[]",
        internalType: "string[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeContracts",
    inputs: [],
    outputs: [
      {
        name: "excludedContracts_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "excludeSenders",
    inputs: [],
    outputs: [
      {
        name: "excludedSenders_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "failed",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "targetArtifactSelectors",
    inputs: [],
    outputs: [
      {
        name: "targetedArtifactSelectors_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzSelector[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "selectors",
            type: "bytes4[]",
            internalType: "bytes4[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetArtifacts",
    inputs: [],
    outputs: [
      {
        name: "targetedArtifacts_",
        type: "string[]",
        internalType: "string[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetContracts",
    inputs: [],
    outputs: [
      {
        name: "targetedContracts_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetInterfaces",
    inputs: [],
    outputs: [
      {
        name: "targetedInterfaces_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzInterface[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "artifacts",
            type: "string[]",
            internalType: "string[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetSelectors",
    inputs: [],
    outputs: [
      {
        name: "targetedSelectors_",
        type: "tuple[]",
        internalType: "struct StdInvariant.FuzzSelector[]",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "selectors",
            type: "bytes4[]",
            internalType: "bytes4[]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "targetSenders",
    inputs: [],
    outputs: [
      {
        name: "targetedSenders_",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "test_cantIncrementCounterDirectly",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "test_cantInitializeDirectly",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "test_cantInitializeDirectly2",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "test_cantMigrateExternally",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "test_cantUpgradeDirectly",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "test_initializeProxy",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "test_upgradeProxy",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "log",
    inputs: [
      {
        name: "",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_address",
    inputs: [
      {
        name: "",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "uint256[]",
        indexed: false,
        internalType: "uint256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "int256[]",
        indexed: false,
        internalType: "int256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_array",
    inputs: [
      {
        name: "val",
        type: "address[]",
        indexed: false,
        internalType: "address[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_bytes",
    inputs: [
      {
        name: "",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_bytes32",
    inputs: [
      {
        name: "",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_int",
    inputs: [
      {
        name: "",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_address",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256[]",
        indexed: false,
        internalType: "uint256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256[]",
        indexed: false,
        internalType: "int256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_array",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "address[]",
        indexed: false,
        internalType: "address[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_bytes",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_bytes32",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_decimal_int",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
      {
        name: "decimals",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_decimal_uint",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "decimals",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_int",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_string",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_named_uint",
    inputs: [
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "val",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_string",
    inputs: [
      {
        name: "",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "log_uint",
    inputs: [
      {
        name: "",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "logs",
    inputs: [
      {
        name: "",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x608060405260078054600160ff199182168117909255600b8054909116909117905534801561002d57600080fd5b50612f698061003d6000396000f3fe60806040523480156200001157600080fd5b50600436106200012d5760003560e01c8063673866e211620000af578063a3e4686f116200007a578063a3e4686f14620001fb578063b5508aa91462000205578063ba414fa6146200020f578063e20c9f71146200022a578063fa7626d4146200023457600080fd5b8063673866e214620001c457806385226c8114620001ce578063916a17c614620001e75780639f2f900114620001f157600080fd5b80633f7286f411620000fc5780633f7286f4146200018357806343f66bae146200018d5780635eb88679146200019757806360fadead14620001a157806366d9a9a014620001ab57600080fd5b8063171bbd8014620001325780631ed7831c146200013e5780632ade388014620001605780633e5e3c231462000179575b600080fd5b6200013c62000242565b005b620001486200039b565b60405162000157919062001536565b60405180910390f35b6200016a620003ff565b604051620001579190620015d9565b620001486200054d565b62000148620005af565b6200013c62000611565b6200013c6200072c565b6200013c6200082b565b620001b562000abc565b6040516200015791906200169f565b6200013c62000ba6565b620001d862000c4f565b60405162000157919062001756565b620001b562000d29565b6200013c62000e13565b6200013c62000f1b565b620001d862001057565b6200021962001131565b604051901515815260200162000157565b6200014862001268565b600754620002199060ff1681565b600060405162000252906200150c565b604051809103906000f0801580156200026f573d6000803e3d6000fd5b50905060008160405162000283906200151a565b6200028f9190620017bc565b604051809103906000f080158015620002ac573d6000803e3d6000fd5b506040805160048082526024820183526020820180516001600160e01b0316631afcd79f60e31b179052915163f28dceb360e01b8152929350737109709ecfa91a80626ff3989d68f67f5b1dd12d9263f28dceb3926200030e929101620017df565b600060405180830381600087803b1580156200032957600080fd5b505af11580156200033e573d6000803e3d6000fd5b50505050806001600160a01b0316635b34b9666040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200037e57600080fd5b505af115801562000393573d6000803e3d6000fd5b505050505050565b60606014805480602002602001604051908101604052809291908181526020018280548015620003f557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620003d6575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b828210156200054457600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b828210156200052c5783829060005260206000200180546200049890620017fb565b80601f0160208091040260200160405190810160405280929190818152602001828054620004c690620017fb565b8015620005175780601f10620004eb5761010080835404028352916020019162000517565b820191906000526020600020905b815481529060010190602001808311620004f957829003601f168201915b50505050508152602001906001019062000476565b50505050815250508152602001906001019062000423565b50505050905090565b60606016805480602002602001604051908101604052809291908181526020018280548015620003f5576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620003d6575050505050905090565b60606015805480602002602001604051908101604052809291908181526020018280548015620003f5576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620003d6575050505050905090565b600060405162000621906200150c565b604051809103906000f0801580156200063e573d6000803e3d6000fd5b506040805160048082526024820183526020820180516001600160e01b0316633c64f99360e21b179052915163f28dceb360e01b8152929350737109709ecfa91a80626ff3989d68f67f5b1dd12d9263f28dceb392620006a0929101620017df565b600060405180830381600087803b158015620006bb57600080fd5b505af1158015620006d0573d6000803e3d6000fd5b50505050806001600160a01b0316638129fc1c6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200071057600080fd5b505af115801562000725573d6000803e3d6000fd5b5050505050565b60006040516200073c906200150c565b604051809103906000f08015801562000759573d6000803e3d6000fd5b506040805160048082526024820183526020820180516001600160e01b031663f92ee8a960e01b179052915163f28dceb360e01b8152929350737109709ecfa91a80626ff3989d68f67f5b1dd12d9263f28dceb392620007bb929101620017df565b600060405180830381600087803b158015620007d657600080fd5b505af1158015620007eb573d6000803e3d6000fd5b50505050806001600160a01b031663c2b3b94a6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200071057600080fd5b60006040516200083b906200150c565b604051809103906000f08015801562000858573d6000803e3d6000fd5b5090506000816040516200086c906200151a565b620008789190620017bc565b604051809103906000f08015801562000895573d6000803e3d6000fd5b5090506000604051620008a89062001528565b604051809103906000f080158015620008c5573d6000803e3d6000fd5b509050816001600160a01b0316638129fc1c6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200090457600080fd5b505af115801562000919573d6000803e3d6000fd5b505060405162900f0160e41b81526001600160a01b03848116600483015285169250630900f0109150602401600060405180830381600087803b1580156200096057600080fd5b505af115801562000975573d6000803e3d6000fd5b50505050620009ea826001600160a01b031663c4128b6d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620009bc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009e2919062001837565b6001620012ca565b60405162900f0160e41b81526001600160a01b038281166004830152831690630900f01090602401600060405180830381600087803b15801562000a2d57600080fd5b505af115801562000a42573d6000803e3d6000fd5b5050505062000ab7826001600160a01b031663c4128b6d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000a89573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000aaf919062001837565b6002620012ca565b505050565b60606019805480602002602001604051908101604052809291908181526020016000905b82821015620005445760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000b8d57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000b4e5790505b5050505050815250508152602001906001019062000ae0565b600060405162000bb6906200150c565b604051809103906000f08015801562000bd3573d6000803e3d6000fd5b50905060008160405162000be7906200151a565b62000bf39190620017bc565b604051809103906000f08015801562000c10573d6000803e3d6000fd5b509050806001600160a01b0316638129fc1c6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200037e57600080fd5b60606018805480602002602001604051908101604052809291908181526020016000905b828210156200054457838290600052602060002001805462000c9590620017fb565b80601f016020809104026020016040519081016040528092919081815260200182805462000cc390620017fb565b801562000d145780601f1062000ce85761010080835404028352916020019162000d14565b820191906000526020600020905b81548152906001019060200180831162000cf657829003601f168201915b50505050508152602001906001019062000c73565b6060601a805480602002602001604051908101604052809291908181526020016000905b82821015620005445760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000dfa57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000dbb5790505b5050505050815250508152602001906001019062000d4d565b600060405162000e23906200150c565b604051809103906000f08015801562000e40573d6000803e3d6000fd5b506040805160048082526024820183526020820180516001600160e01b0316633c64f99360e21b179052915163f28dceb360e01b8152929350737109709ecfa91a80626ff3989d68f67f5b1dd12d9263f28dceb39262000ea2929101620017df565b600060405180830381600087803b15801562000ebd57600080fd5b505af115801562000ed2573d6000803e3d6000fd5b505060405162900f0160e41b815263deadbeef60048201526001600160a01b0384169250630900f0109150602401600060405180830381600087803b1580156200071057600080fd5b600060405162000f2b906200150c565b604051809103906000f08015801562000f48573d6000803e3d6000fd5b50905060008160405162000f5c906200151a565b62000f689190620017bc565b604051809103906000f08015801562000f85573d6000803e3d6000fd5b506040805160048082526024820183526020820180516001600160e01b0316632866815360e11b179052915163f28dceb360e01b8152929350737109709ecfa91a80626ff3989d68f67f5b1dd12d9263f28dceb39262000fe7929101620017df565b600060405180830381600087803b1580156200100257600080fd5b505af115801562001017573d6000803e3d6000fd5b50505050806001600160a01b0316638fd3ab806040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200037e57600080fd5b60606017805480602002602001604051908101604052809291908181526020016000905b82821015620005445783829060005260206000200180546200109d90620017fb565b80601f0160208091040260200160405190810160405280929190818152602001828054620010cb90620017fb565b80156200111c5780601f10620010f0576101008083540402835291602001916200111c565b820191906000526020600020905b815481529060010190602001808311620010fe57829003601f168201915b5050505050815260200190600101906200107b565b600754600090610100900460ff1615620011545750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620012635760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091620011e5917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162001851565b60408051601f1981840301815290829052620012019162001884565b6000604051808303816000865af19150503d806000811462001240576040519150601f19603f3d011682016040523d82523d6000602084013e62001245565b606091505b50915050808060200190518101906200125f9190620018a2565b9150505b919050565b60606013805480602002602001604051908101604052809291908181526020018280548015620003f5576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620003d6575050505050905090565b808214620013f5577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516200133d9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a81830152690808080808149a59da1d60b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1620013f5620013f9565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620014fb5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905262001496929160200162001851565b60408051601f1981840301815290829052620014b29162001884565b6000604051808303816000865af19150503d8060008114620014f1576040519150601f19603f3d011682016040523d82523d6000602084013e620014f6565b606091505b505050505b6007805461ff001916610100179055565b61093780620018c783390190565b6104e180620021fe83390190565b61085580620026df83390190565b6020808252825182820181905260009190848201906040850190845b81811015620015795783516001600160a01b03168352928401929184019160010162001552565b50909695505050505050565b60005b83811015620015a257818101518382015260200162001588565b50506000910152565b60008151808452620015c581602086016020860162001585565b601f01601f19169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b858110156200168f57603f198b8503018752825180516001600160a01b031685528901518985018990528051898601819052908a0190606081881b870181019190870190855b818110156200167857605f1989850301835262001665848651620015ab565b948e01949350918d019160010162001646565b505050978a01979450509188019160010162001600565b50919a9950505050505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156200174757898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015620017315783516001600160e01b0319168252928b019260019290920191908b019062001705565b50978a01979550505091870191600101620016c7565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015620017af57603f198886030184526200179c858351620015ab565b945092850192908501906001016200177d565b5092979650505050505050565b6001600160a01b0391909116815260406020820181905260009082015260600190565b602081526000620017f46020830184620015ab565b9392505050565b600181811c908216806200181057607f821691505b6020821081036200183157634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156200184a57600080fd5b5051919050565b6001600160e01b03198316815281516000906200187681600485016020870162001585565b919091016004019392505050565b600082516200189881846020870162001585565b9190910192915050565b600060208284031215620018b557600080fd5b81518015158114620017f457600080fdfe60a060405234801561001057600080fd5b50610019610022565b306080526100d4565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100725760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d15780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6080516108486100ef60003960006105a601526108486000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638129fc1c1161005b5780638129fc1c146100bc5780638fd3ab80146100c4578063c2b3b94a146100cc578063c4128b6d146100d457600080fd5b80630900f010146100825780635b34b96614610097578063689f90c31461009f575b600080fd5b610095610090366004610720565b6100eb565b005b6100956100f7565b6100a7610115565b60405190151581526020015b60405180910390f35b610095610128565b61009561022e565b610095610344565b6100dd60005481565b6040519081526020016100b3565b6100f48161042c565b50565b6100ff61052f565b60008054908061010e83610766565b9190505550565b600061011f610568565b5460ff16919050565b61013061059c565b6000805160206107f38339815191528054600160401b810460ff16159067ffffffffffffffff166000811580156101645750825b905060008267ffffffffffffffff1660011480156101815750303b155b90508115801561018f575080155b156101ad5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156101d757845460ff60401b1916600160401b1785555b6101e060008055565b831561022757845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2906020015b60405180910390a15b5050505050565b61023661059c565b6000805160206107f38339815191525467ffffffffffffffff1661025b90600161077f565b6000805160206107f38339815191528054600160401b900460ff168061028f5750805467ffffffffffffffff808416911610155b156102ad5760405163f92ee8a960e01b815260040160405180910390fd5b805468ffffffffffffffffff191667ffffffffffffffff831617600160401b1781556102d76105e5565b5460ff166102f857604051632866815360e11b815260040160405180910390fd5b805460ff60401b1916815560405167ffffffffffffffff831681527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15050565b6000805160206107f38339815191528054600160401b810460ff16159067ffffffffffffffff166000811580156103785750825b905060008267ffffffffffffffff1660011480156103955750303b155b9050811580156103a3575080155b156103c15760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156101e057845460ff60401b1916600160401b178555831561022757845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200161021e565b61043461059c565b61043d81610613565b60006104476105e5565b805490915060ff161561045c5761045c6107a7565b805460ff191660011781556040805163011fa75760e71b815290513091638fd3ab8091600480830192600092919082900301818387803b15801561049f57600080fd5b505af11580156104b3573d6000803e3d6000fd5b50505050306001600160a01b031663689f90c36040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104f5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051991906107bd565b506105246000610653565b805460ff1916905550565b6000805160206107f383398151915254600160401b900460ff1661056657604051631afcd79f60e31b815260040160405180910390fd5b565b60008061059660017f5443fea4dc453d96b81ce55b62e11a4094cc4cbb8a360956a7253cfdb42506cc6107df565b92915050565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361056657604051633c64f99360e21b815260040160405180910390fd5b60008061059660017f7487ca88d037ca20519908b1ee7556206bef53bce0226a348750cb9d4f688e4f6107df565b61061c8161066e565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b8061065c610568565b805460ff191691151591909117905550565b6001600160a01b0381163b6106df5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840160405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b60006020828403121561073257600080fd5b81356001600160a01b038116811461074957600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b60006001820161077857610778610750565b5060010190565b67ffffffffffffffff8181168382160190808211156107a0576107a0610750565b5092915050565b634e487b7160e01b600052600160045260246000fd5b6000602082840312156107cf57600080fd5b8151801515811461074957600080fd5b818103818111156105965761059661075056fef0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a264697066735822122063a2944ee310c2cad2a1ff61afbbe41f2a2735bf00ec2eede66c4d06377294ef64736f6c6343000813003360806040526040516104e13803806104e1833981016040819052610022916102de565b61002e82826000610035565b50506103fb565b61003e83610061565b60008251118061004b5750805b1561005c5761005a83836100a1565b505b505050565b61006a816100cd565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606100c683836040518060600160405280602781526020016104ba60279139610180565b9392505050565b6001600160a01b0381163b61013f5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080856001600160a01b03168560405161019d91906103ac565b600060405180830381855af49150503d80600081146101d8576040519150601f19603f3d011682016040523d82523d6000602084013e6101dd565b606091505b5090925090506101ef868383876101f9565b9695505050505050565b60608315610268578251600003610261576001600160a01b0385163b6102615760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610136565b5081610272565b610272838361027a565b949350505050565b81511561028a5781518083602001fd5b8060405162461bcd60e51b815260040161013691906103c8565b634e487b7160e01b600052604160045260246000fd5b60005b838110156102d55781810151838201526020016102bd565b50506000910152565b600080604083850312156102f157600080fd5b82516001600160a01b038116811461030857600080fd5b60208401519092506001600160401b038082111561032557600080fd5b818501915085601f83011261033957600080fd5b81518181111561034b5761034b6102a4565b604051601f8201601f19908116603f01168101908382118183101715610373576103736102a4565b8160405282815288602084870101111561038c57600080fd5b61039d8360208301602088016102ba565b80955050505050509250929050565b600082516103be8184602087016102ba565b9190910192915050565b60208152600082518060208401526103e78160408501602087016102ba565b601f01601f19169190910160400192915050565b60b1806104096000396000f3fe608060405236601057600e6013565b005b600e5b601f601b6021565b6058565b565b600060537f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e8080156076573d6000f35b3d6000fdfea2646970667358221220ee53cb1b58c052d2c0f474d56cde7c6408024cc7d98bd51f34ddd9fd2b3afe3a64736f6c63430008130033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c656460a060405234801561001057600080fd5b50610019610022565b306080526100d4565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100725760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d15780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6080516107666100ef60003960006104bc01526107666000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638129fc1c1161005b5780638129fc1c146100bc5780638fd3ab80146100c4578063c2b3b94a146100cc578063c4128b6d146100d457600080fd5b80630900f010146100825780635b34b96614610097578063689f90c31461009f575b600080fd5b61009561009036600461063e565b6100eb565b005b6100956100f7565b6100a7610115565b60405190151581526020015b60405180910390f35b610095610128565b610095610224565b610095610130565b6100dd60005481565b6040519081526020016100b3565b6100f481610342565b50565b6100ff610445565b60008054908061010e83610684565b9190505550565b600061011f61047e565b5460ff16919050565b6101306104b2565b6000805160206107118339815191528054600160401b810460ff16159067ffffffffffffffff166000811580156101645750825b905060008267ffffffffffffffff1660011480156101815750303b155b90508115801561018f575080155b156101ad5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156101d757845460ff60401b1916600160401b1785555b831561021d57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050565b61022c6104b2565b6000805160206107118339815191525467ffffffffffffffff1661025190600161069d565b6000805160206107118339815191528054600160401b900460ff16806102855750805467ffffffffffffffff808416911610155b156102a35760405163f92ee8a960e01b815260040160405180910390fd5b805468ffffffffffffffffff191667ffffffffffffffff831617600160401b1781556102cd6104fb565b5460ff166102ee57604051632866815360e11b815260040160405180910390fd5b6102f6610529565b805460ff60401b1916815560405167ffffffffffffffff831681527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15050565b61034a6104b2565b61035381610531565b600061035d6104fb565b805490915060ff1615610372576103726106c5565b805460ff191660011781556040805163011fa75760e71b815290513091638fd3ab8091600480830192600092919082900301818387803b1580156103b557600080fd5b505af11580156103c9573d6000803e3d6000fd5b50505050306001600160a01b031663689f90c36040518163ffffffff1660e01b8152600401602060405180830381865afa15801561040b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042f91906106db565b5061043a6000610571565b805460ff1916905550565b60008051602061071183398151915254600160401b900460ff1661047c57604051631afcd79f60e31b815260040160405180910390fd5b565b6000806104ac60017f5443fea4dc453d96b81ce55b62e11a4094cc4cbb8a360956a7253cfdb42506cc6106fd565b92915050565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361047c57604051633c64f99360e21b815260040160405180910390fd5b6000806104ac60017f7487ca88d037ca20519908b1ee7556206bef53bce0226a348750cb9d4f688e4f6106fd565b61047c6100f7565b61053a8161058c565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b8061057a61047e565b805460ff191691151591909117905550565b6001600160a01b0381163b6105fd5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840160405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b60006020828403121561065057600080fd5b81356001600160a01b038116811461066757600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b6000600182016106965761069661066e565b5060010190565b67ffffffffffffffff8181168382160190808211156106be576106be61066e565b5092915050565b634e487b7160e01b600052600160045260246000fd5b6000602082840312156106ed57600080fd5b8151801515811461066757600080fd5b818103818111156104ac576104ac61066e56fef0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a264697066735822122097d4f329df0fff483d0c57899c1e2bf6382655404c77fad5f04311dee9e7bee964736f6c63430008130033a2646970667358221220efaf337700925924effd888adfb62c48fba505bd226c65c7e99d89bc000828bd64736f6c63430008130033";

type ImplementationTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ImplementationTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ImplementationTest__factory extends ContractFactory {
  constructor(...args: ImplementationTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<ImplementationTest> {
    return super.deploy(overrides || {}) as Promise<ImplementationTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ImplementationTest {
    return super.attach(address) as ImplementationTest;
  }
  override connect(signer: Signer): ImplementationTest__factory {
    return super.connect(signer) as ImplementationTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ImplementationTestInterface {
    return new utils.Interface(_abi) as ImplementationTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ImplementationTest {
    return new Contract(address, _abi, signerOrProvider) as ImplementationTest;
  }
}
