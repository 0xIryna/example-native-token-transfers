/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  MessageTransmitterViewAttesterManager,
  MessageTransmitterViewAttesterManagerInterface,
} from "../../CircleCCTPSimulator.sol/MessageTransmitterViewAttesterManager";

const _abi = [
  {
    type: "function",
    name: "attesterManager",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "enableAttester",
    inputs: [
      {
        name: "newAttester",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setSignatureThreshold",
    inputs: [
      {
        name: "newSignatureThreshold",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
] as const;

export class MessageTransmitterViewAttesterManager__factory {
  static readonly abi = _abi;
  static createInterface(): MessageTransmitterViewAttesterManagerInterface {
    return new Interface(
      _abi
    ) as MessageTransmitterViewAttesterManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MessageTransmitterViewAttesterManager {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as MessageTransmitterViewAttesterManager;
  }
}
