/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { INTTToken, INTTTokenInterface } from "../INTTToken";

const _abi = [
  {
    type: "function",
    name: "mint",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setMinter",
    inputs: [
      {
        name: "newMinter",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "NewMinter",
    inputs: [
      {
        name: "newMinter",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CallerNotMinter",
    inputs: [
      {
        name: "caller",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidMinterZeroAddress",
    inputs: [],
  },
] as const;

export class INTTToken__factory {
  static readonly abi = _abi;
  static createInterface(): INTTTokenInterface {
    return new Interface(_abi) as INTTTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): INTTToken {
    return new Contract(address, _abi, runner) as unknown as INTTToken;
  }
}
